#+TITLE:   tools/biblio
#+DATE:    April 11, 2020
#+SINCE:   21.12.0 (#5290)
#+STARTUP: inlineimages

* Table of Contents :TOC_3:noexport:
- [[#description][Description]]
  - [[#maintainers][Maintainers]]
  - [[#module-flags][Module Flags]]
  - [[#plugins][Plugins]]
  - [[#note-about-org-ref][Note about org-ref]]
- [[#prerequisites][Prerequisites]]
  - [[#pdf-viewing][PDF viewing]]
  - [[#bibtex-completion][Bibtex completion]]
- [[#features][Features]]
- [[#configuration][Configuration]]
  - [[#org-cite][Org-cite]]
    - [[#processor-configuration][Processor configuration]]
    - [[#other-configuration-options][Other configuration options]]
  - [[#path-configuration][Path configuration]]
    - [[#bibtex-completion-helm-bibtex-ivy-bibtex][bibtex-completion (helm-bibtex, ivy-bibtex)]]
    - [[#org-ref][org-ref]]
  - [[#templates][Templates]]
    - [[#bibtex-completion-1][Bibtex-completion]]
    - [[#org-roam-bibtex-1][org-roam-bibtex]]
- [[#troubleshooting][Troubleshooting]]

* Description
This module adds tools to help when working with bibliographies and citations.
Minimal modifications have been made to the packages and the configuration
details are listed in [[*Configuration][Configuration]] below. Some sensible defaults have been
selected so it should be possible to use without modifications.

** Maintainers
+ [[https://github.com/bdarcus][bdarcus]]
+ [[https://github.com/brianmcgillion][bmg]]

** Module Flags
This module provides no flags.

** Plugins
+  [[https://github.com/tmalsburg/helm-bibtex][bibtex-completion]]
+ ~:completion vertico~
  + [[https://github.com/bdarcus/citar][citar]]
+ ~:completion helm~
  + [[https://github.com/tmalsburg/helm-bibtex][helm-bibtex]]
+ ~:completion ivy~
  + [[https://github.com/tmalsburg/helm-bibtex][ivy-bibtex]]
+ ~:lang org~
  + [[https://github.com/jkitchin/org-ref][org-ref]]
+ ~:lang org +roam~
  + [[https://github.com/Zaeph/org-roam-bibtex][org-roam-bibtex]]
** Note about org-ref
Although org-ref supports both ivy and helm, certain functionality e.g. the ability to drag-n-drop a pdf into a bib file in order to have org-ref automatically generate a new bibtex entry will pull in helm, as it is hard coded to support that.

For this reason many of the options are not enabled by default, if you wish to enable the other functions see: [[https://github.com/jkitchin/org-ref#some-other-useful-libraries-in-org-ref][org-ref additional libraries]]

* Prerequisites
There are no hard dependencies for this module.

** PDF viewing
An application for opening PDF files is required. By default =DocView= is used
though it is highly recommended to enable =:tools pdf= in your personal ~init.el~
file to enable [[https://github.com/politza/pdf-tools][pdf-tools]].

** Bibtex completion
For vertico, helm, or ivy bibtex completion you should enable =:completion vertico=, =:completion helm=, or
=:completion ivy= respectively.

* Features
Both [[https://github.com/tmalsburg/helm-bibtex][helm-bibtex]] (includes helm-bibtex, ivy-bibtex and bibtex-completion code)
[[org-ref]], and [[https://github.com/bdarcus/bibtex-actions][citar]] provide an extensive range of features so it is best to check
their respective sites for a full list of features.

On a high-level you can expect:
+ bibliography management
+ notes per reference
+ citation support
+ citation lookup
+ org integration for writing literate latex (org-roam)
+ fast indexing and searching of references.

To understand the interaction between these packages this [[https://www.reddit.com/r/emacs/comments/cxu0qg/emacs_org_and_bibtex_as_alternative_to_zotero_and/eyqe4vq/][reddit]] thread will explain
the unique features and the overlapping functionality, if any.

In addition, this module provides support for native Org-mode citations: =org-cite=.

* Configuration

For all these packages it is advisable to use ~(after! package)~ in your
~config.el~ to override any default settings and tune the packages to your
needs.

** Org-cite

*** Processor configuration

=Org-cite= provides rich features and flexible configuration options via its "processor" capabilities.

1. /insert/ provides =org-cite-insert= integration for inserting and editing citations.
2. /activate/ provides fontification, previews, etc.
3. /follow/ integrates contextual citation actions with =org-open-at-point=.
4. /export/ for different output targets.

This module makes the following processors available:

1. The core =oc-basic=, =oc-natbib=, =oc-biblatex=, and =oc-csl=.
2. [[https://github.com/bdarcus/bibtex-actions][citar]] for integration with =vertico= completion.

The module configures these processors as follows for the different completion modules:

| Feature  | Vertico | Ivy      | Helm     |
|----------+---------+----------+----------|
| Insert   | citar   | oc-basic | oc-basic |
| Activate | citar   | oc-basic | oc-basic |
| Follow   | citar   | oc-basic | oc-basic |


*** Other configuration options

If you like, you can also set the =oc-csl= processor to look in a specific
directory for your CSL styles:

#+BEGIN_SRC emacs-lisp
(setq org-cite-csl-styles-dir "~/Zotero/styles")
#+END_SRC

** org-roam-bibtex
This package integrates org-ref and bibtex-completion into [[https://github.com/jethrokuan/org-roam][org-roam]] mode, which can be enabled via =lang org +roam=. For academics and those working extensively with documents which they need to keep detailed notes on for cross-referencing.

** Path configuration

You must set the path variable for either =citar= (if using =vertico=
completion) or =bibtex-completion= (if using =ivy= or =helm=); this module will
in turn set the =org-cite-global-bibliography= variable to the same value:

#+BEGIN_src emacs-lisp
(setq! bibtex-completion-bibliography '("/path/to/references.bib"))
#+END_src

#+BEGIN_src emacs-lisp
(setq! citar-bibliography '("/path/to/references.bib"))
#+END_src

You may also set the respective note and library path variables as well for
enhanced functionality:

#+BEGIN_src emacs-lisp
(setq! bibtex-completion-library-path '("/path/to/library/path/")
       bibtex-completion-notes-path "/path/to/your/notes/")
#+END_src

#+BEGIN_src emacs-lisp
(setq! citar-library-paths '("/path/to/library/files/")
       citar-notes-paths '("/path/to/your/notes/"))
#+END_src


It is of course possible to set the variables directly through their respective packages as shown below, in which case you can ignore the ~+biblio...~ versions. See [[*bibtex-completion (helm-bibtex, ivy-bibtex)][bibtex-completion]] and [[*org-ref][org-ref]] configurations below.

#+BEGIN_src emacs-lisp
(setq! +biblio-pdf-library-dir "/path/to/bibrary/"
       +biblio-default-bibliography-files '("/path/to/bibliography.bib")
       +biblio-notes-path "/path/to/notes/")
#+END_src

Unless ~+biblio-notes-path~ ends in a ~/~ it is assumed to be a single file and not a directory.

Each of the variables overlays the corresponding variables in the following way
+ ~+biblio-default-bibliography-files~
  - ~bibtex-completion-library-path~
  - ~org-ref-pdf-directory~
+ ~+biblio-default-bibliography-files~
  - ~reftex-default-bibliography~
  - ~bibtex-completion-bibliography~
  - ~org-ref-default-bibliography~
+ ~+biblio-notes-path~
  - ~+bibibtex-completion-notes-path~
  - ~org-ref-bibliography-notes~
  - ~org-ref-notes-directory~

*** bibtex-completion (helm-bibtex, ivy-bibtex)
These packages share the same common backend ~bibtex-completion~
#+BEGIN_src emacs-lisp
(after! bibtex-completion
  (setq! bibtex-completion-bibliography "/path/to/bib/"
        bibtex-completion-library-path "/path/to/Papers/"
        bibtex-completion-notes-path "/path/to/your/notes/"))
#+END_src
*** org-ref
#+BEGIN_src emacs-lisp
(after! org-ref
  (setq! org-ref-bibliography-notes "/path/to/notes/"
        org-ref-default-bibliography "/path/to/bib"
        org-ref-pdf-directory "/path/to/papers/"
        reftex-default-bibliography org-ref-default-bibliography))

** Templates

This module provides reasonable default templates for the packages. However, if
you wish to change them, refer to the respective packages' documentation for in-depth
instructions.

*** Bibtex-completion
#+BEGIN_src emacs-lisp
(after! bibtex-completion
  (setq!  bibtex-completion-notes-template-multiple-files
         "${title} : (${=key=})\n Some more format options"))
#+END_src

*** org-roam-bibtex
To change the default template you can change it according to [[https://github.com/Zaeph/org-roam-bibtex][org-roam-bibtex]]
#+BEGIN_src emacs-lisp
(after! org-roam-bibtex
  (setq org-roam-bibtex-preformat-keywords '("some" "key" "words"))
  (setq org-roam-bibtex-template '(("Some template"))))
#+END_src

* Troubleshooting
# Common issues and their solution, or places to look for help
