#+title:    :completion new-helm
#+subtitle: A tank for hunting a house fly
#+created: August 11, 2022
#+since:   2.0.9

* Description :unfold:
This module provides Helm integration for a variety of Emacs commands, as well as
a unified interface for project search and replace, powered by [[https://github.com/BurntSushi/ripgrep][ripgrep]].

For more info on Helm, see:
- [[https://rnchzn.github.io/helm/doc/helm-manual.html]]
- [[https://tuhdo.github.io/helm-intro.html]]

** Maintainers
- @Johan_Widen

** Module Flags
- +ack-grep ::
  Configure ~helm-ff-do-grep~ to use [[https://beyondgrep.com/][ack]] instead of [[https://www.gnu.org/software/grep/][grep]] for searching.

- +autoresize ::
  The helm session window will be created within the current window.
  The session window height will be dynamically adjusted when few completion
  candidates remain.

- +childframe ::
  Causes Helm to display in a floating child frame, above Emacs.

- +disable-helm-ff-lynx-style ::
  Disable special action for [[kbd:][<left>]], [[kbd:][<right>]] in ~find-file~.

- +fuzzy ::
  Enables fuzzy completion for Helm searches. Recommended. One then gets both
  fuzzy matching and regular helm matching.
  Helm uses emacs builtin ~completion-styles~. This is true even if fuzzy is
  not enabled.

- +find-file-at-point ::
  Don't let helm handle ~find-file-at-point~. Change introduced 2017-06-09
  without any explanation. Can someone provide an example where helm's
  handling of this hurts?

- +helm-hide-mode-line ::
  Hide mode line in helm windows. The mode line provides key map
  help. Advice: Show modeline if you are not a helm expert.

- +helm-mode ::
  Enable ~helm-mode~ (use helm completion almost everywhere).

- +helm-popup-layout ::
  Define layout for helm popup window. Note that helm sessions provide
  keybindings, to change the layout: [[kbd:][C-t]], [[kbd:][C-c -]], [[kbd:][C-c %]]
  This is independent of whether [[doom-module:][+helm-popup-layout]] is enabled or not.

- +icons ::
  Enables icons (supports both [[doom-package:][all-the-icons]] and [[doom-package:][treemacs]] icons)

- +remap-commands ::
  Remap some emacs commands to helm commands. Recommended.

- +remap-swiper ::
  Remap ~swiper~ to ~swiper-helm~.

- +treemacs-icons ::
  When [[doom-module:][+icons]] enabled, use [[doom-package:][treemacs]] icon pack.

Remember to run "doom sync" when you enable or disable a module flag in
=init.el=.

*** childframe, change of implementation
The implementation of [[doom-module:][+childframe]] in the old [[doom-module:][helm]]
module, no longer works.

Enabling this causes emacs to crash, when closing the childframe.

It might be a good idea to compare code with
[[https://github.com/tumashu/company-posframe]],
ivy-posframe and [[https://github.com/tumashu/vertico-posframe]].

To work around this problem, the implementation was changed to instead use
package [[doom-package:][helm-posframe]].

Note also that helm has built in functionality for displaying the completion
buffer in a separate frame.
See [[https://github.com/emacs-helm/helm/wiki/frame]].

** Packages
- [[doom-package:][helm]]
- [[doom-package:][helm-rg]]
- [[doom-package:][helm-c-yasnippet]]
- [[doom-package:][helm-company]]
- [[doom-package:][helm-describe-modes]]
- [[doom-package:][helm-projectile]]
- [[doom-package:][helm-swiper]]
- [[doom-package:][helm-descbinds]]
- [[doom-package:][helm-flx]]* if [[doom-module:][+fuzzy]]
- [[doom-package:][helm-posframe]]* if [[doom-module:][+childframe]]
- [[doom-package:][helm-org]]* if [[doom-module:][:lang org]]
- [[doom-package:][helm-icons]]* if [[doom-module:][+icons]]

* Installation
[[id:01cffea4-3329-45e2-a892-95a384ab2338][Enable this module in your ~doom!~ block.]]

This module has only one requirement: [[https://github.com/BurntSushi/ripgrep][ripgrep]], which is a hard dependency of
Doom itself, so you should already have it installed.

Otherwise, Helm provides many commands to interface with a variety of programs
from [[https://github.com/junegunn/fzf][fzf]] to [[https://kapeli.com/dash][Dash docsets]] to [[https://www.passwordstore.org/][pass]] and /much/ more. These programs are optional
for this module, but must be installed if you intend to use their associated
Helm command or package.

* Prerequisites
Requires that at least one of:
- Module flag [[doom-module:][+remap-commands]] is enabled.
- Module [[doom-module:][ivy]] is enabled.
- Module [[doom-module:][vertico]] is enabled.

Otherwise commands such as [[kbd:][M-x]] will have very limited completion functionality.

* Usage
Much like [[doom-package:][ivy]] and [[doom-package:][vertico]], [[doom-package:][helm]] is a /large/ framework. Covering all its
features is not within the scope of this module's documentation, so only its
highlights will be covered here.

** Jump-to navigation
Similar to Ivy, this module provides an interface to navigate within a project
using [[doom-package:][projectile]]:
| Keybind          | Description                                              |
|------------------+----------------------------------------------------------|
| [[kbd:][SPC p f]], [[kbd:][SPC SPC]] | Jump to file in project  (~+helm/projectile-find-file~)  |
| [[kbd:][SPC f f]], [[kbd:][SPC .]]   | Jump to file from current directory  (~helm-find-files~) |
| [[kbd:][SPC s i]]          | Jump to symbol in file                                   |

** Project search & replace
This module also provides interactive text search and replace using [[https://github.com/BurntSushi/ripgrep][ripgrep]]
*** Search
| Keybind | Description                                               |
|---------+-----------------------------------------------------------|
| [[kbd:][SPC s p]] | Search project (~+default/search-project~)                |
| [[kbd:][SPC s P]] | Search another project  (~+default/search-other-project~) |
| [[kbd:][SPC s d]] | Search this directory (~+default/search-cwd~)             |
| [[kbd:][SPC s D]] | Search another directory (~+default/search-other-cwd~)    |

Prefixing these keys with the universal argument ([[kbd:][SPC u]] for evil users; [[kbd:][C-u]]
otherwise) changes the behavior of these commands, instructing the underlying
search engine to include ignored files.

This module also provides Ex Commands for evil users:
| Ex command             | Description                                   |
|------------------------+-----------------------------------------------|
| ~:pg[rep][!] [QUERY]~  | Search project (if ~!~, include hidden files) |
| ~:pg[rep]d[!] [QUERY]~ | Search from current directory                 |
|                        | (if ~!~, don't search recursively)            |

The optional ~!~ is equivalent to the universal argument for the previous
commands.

*** Replace
These keybindings are available while a search is active:
| Keybind | Description                                   |
|---------+-----------------------------------------------|
| [[kbd:][C-c C-o]] | Open a buffer with your search results        |
| [[kbd:][C-c C-e]] | Open a writable buffer of your search results |
| [[kbd:][C-SPC]]   | Preview the current candidate                 |
| [[kbd:][C-RET]]   | Open the selected candidate in other-window   |

Changes to the resulting [[doom-package:][wgrep]] buffer (opened by [[kbd:][C-c C-e]]) can be committed
with [[kbd:][C-c C-c]] and aborted with [[kbd:][C-c C-k]] (alternatively [[kbd:][ZZ]] and [[kbd:][ZQ]], for evil
users).

** In-buffer searching
The [[doom-package:][swiper]] package provides an interactive buffer search.
The package [[doom-package:][swiper-helm]], provides a special helm interface to swiper.
In addition, module flag [[doom-module:][+remap-swiper]] rebinds the ~swiper~ key bindings to ~swiper-helm~.
It can be invoked with:
- [[kbd:][SPC s s]] (~swiper-isearch~)
- [[kbd:][SPC s S]] (~swiper-isearch-thing-at-point~)
- [[kbd:][SPC s b]] (~swiper~)
- ~:sw[iper] [QUERY]~

A [[doom-package:][wgrep]] buffer can be opened from swiper with [[kbd:][C-c C-e]].

** Helm integration for various completing commands
Helm also has a number of overrides for built-in functionality:

*** General
| Keybind    | Description               |
|------------+---------------------------|
| [[kbd:][M-x]], [[kbd:][SPC :]] | Smarter, smex-powered M-x |
| [[kbd:][SPC ']]      | Resume last ivy session   |

*** Jump to files, buffers or projects
| Keybind          | Description                                             |
|------------------+---------------------------------------------------------|
| [[kbd:][SPC RET]]          | Find bookmark                                           |
| [[kbd:][SPC f f]], [[kbd:][SPC .]]   | Browse from current directory (~helm-find-files~)       |
| [[kbd:][SPC p f]], [[kbd:][SPC SPC]] | Find file in project (~+helm/projectile-find-file~)     |
| [[kbd:][SPC f r]]          | Find recently opened file                               |
| [[kbd:][SPC p p]]          | Open another project (~helm-projectile-switch-project~) |
| [[kbd:][SPC b b]], [[kbd:][SPC ,]]   | Switch to buffer in current workspace                   |
| [[kbd:][SPC b B]], [[kbd:][SPC <]]   | Switch to buffer                                        |

*** Search
| Keybind | Description                                                          |
|---------+----------------------------------------------------------------------|
| [[kbd:][SPC p t]] | List all TODO/FIXMEs in project                                      |
| [[kbd:][SPC s b]] | Search the current buffer (~+default/search-buffer~)                 |
| [[kbd:][SPC s d]] | Search this directory (~+default/search-cwd~)                        |
| [[kbd:][SPC s D]] | Search another directory (~+default/search-other-cwd~)               |
| [[kbd:][SPC s i]] | Search for symbol in current buffer                                  |
| [[kbd:][SPC s p]] | Search project (~+default/search-project~)                           |
| [[kbd:][SPC s P]] | Search another project (~+default/search-other-project~)             |
| [[kbd:][SPC s s]] | Search the current buffer (incrementally) (~+default/search-buffer~) |

** Autoloaded functions
~+helm/projectile-find-file~:
- Call ~helm-find-files~ if called from HOME,
  otherwise ~helm-projectile-find-file~.

~+helm/workspace-buffer-list~:
- A version of ~helm-buffers-list~ with its buffer list restricted to the
  current workspace.

~+helm/workspace-mini~:
- A version of ~helm-mini~ with its buffer list restricted to the current
  workspace.

~+helm-file-search~:
- Conduct a file search using [[https://github.com/BurntSushi/ripgrep][ripgrep]].

~+helm/project-search~:
- Perform a project search from the project root, with [[https://github.com/BurntSushi/ripgrep][ripgrep]].

~+helm/project-search-from-cwd~:
- Perform a project search recursively from the current directory, with [[https://github.com/BurntSushi/ripgrep][ripgrep]].

* Configuration

** helm-mode
helm-mode is part of package helm.

To cite helm-mode documentation: "All functions in Emacs that use
~completing-read~, ~read-file-name~, ~completion-in-region~ and
friends will use helm interface when this mode is turned on."

The exceptions are certain functions listed in variable
~helm-completing-read-handlers-alist~, declared in package ~helm-mode~.
The functions in this list are handled specially.
In particular one can tell helm to let a function alone, by including it in
this list. So, suppose you have some emacs command ~foo~ in package ~bar~
that uses a completion framework different from helm, say company, and this
command stops working when ~helm-mode~ is enabled. You may then be able to
get ~foo~ to work again, while still having ~helm-mode~ enabled,
by adding the following to your =$DOOMDIR/config.el=:

#+begin_src emacs-lisp
(after! (helm bar)
  (add-to-list 'helm-completing-read-handlers-alist (cons #'foo nil))
)
#+end_src

** helm
~helm-display-header-line~ is set to nil in =config.el=. A good setting for
helm experts.
If you are not an expert it is recommended to show the header line:
- In =$DOOMDIR/config.el=:

#+begin_src emacs-lisp
(after! helm
  (setq helm-display-header-line t))
#+end_src

*** helm-multi-files
~helm-multi-files~ can use locate as a source for file names.
The default key binding for this now opens a keymap for ~helm-projectile~.
The key binding to switch to using locate is now [[kbd:][C-c L]].

*** annotations
By default [[kbd:][M-x]] shows key bindings, if any. This is controlled by
emacs builtin variable ~suggest-key-bindings~.

If you want more annotations you can set the emacs builtin variable
~completions-detailed~. It controls whether Emacs should include the
docstring description for completion candidates in commands like
~describe-function~.

** Icons
Icons are now included, through one of two providers: [[doom-package:][all-the-icons]] and
[[doom-package:][treemacs]].

By default, to maintain consistency we use [[doom-package:][all-the-icons]]; however if you wish
to modify this you can do so using module flag [[doom-module:][+treemacs-icons]].

** helm-posframe
Have a look at =helm-posframe.el=, to see which variables are available to
users.
These variables can be configured from your =$DOOMDIR/config.el=,
using code similar to:

#+begin_src emacs-lisp
(after! helm
  (when (modulep! :completion new-helm +childframe)
    (setq helm-posframe-border-width 16)))
#+end_src

The most important variables, available to users, are already getting an
inital value in =config.el= in this directory.
Search for [[doom-module:][+childframe]] in that file.

** helm-projectile
You may want to use the Helm versions of common Projectile commands.
See: [[https://github.com/bbatsov/helm-projectile]], section Usage.
This can be configured in your =$DOOMDIR/config.el=, using code similar to:

#+begin_src emacs-lisp
(after! helm-projectile
  ;; (setq projectile-switch-project-action 'helm-projectile)
  (helm-projectile-on))
#+end_src

You may also want to change variable ~projectile-switch-project-action~, as
suggested in [[https://tuhdo.github.io/helm-projectile.html]], but doom
already has a useful setting for that variable, that puts each project in
its own workspace. See doom module [[doom-module:][:ui workspaces]].
The helm module also defines workspace/project related commands,
such as ~+helm/workspace-mini~.

* Troubleshooting

* Appendix

** More about fuzzy matching and helm matching
For example, try something
similar to [[https://tuhdo.github.io/helm-intro.html#orgheadline2][helm-intro]] where tuhdo
searches for the file i5100_edac.c. You should find that this works also
when fuzzy matching is enabled.

** More about emacs completion-styles
For more about emacs completion-styles see
[[https://www.masteringemacs.org/article/understanding-minibuffer-completion][understanding-minibuffer-completion]].
